@page "/ChangePassword"
<PageTitle>Change Password</PageTitle>

<EditForm method="post" FormName="login" Model="@model" OnValidSubmit="Save">
    <MudGrid Justify="Justify.Center">
        <MudItem sm="12" md="6">
            <MudCard>
                <MudCardContent>
                    <MudTextField Variant="Variant.Outlined" Label="Current Password"
                                  @bind-Value="model.Password"
                                  For="@(() => model.Password)"
                                  InputType="InputType.Password" />
                    <MudTextField Variant="Variant.Outlined" Label="New Password"
                                  @bind-Value="model.NewPassword"
                                  For="@(() => model.NewPassword)"
                                  InputType="InputType.Password" />
                    
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               Class="ml-auto">Change Password</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>
@code {
    ChangePasswordEntity model = new ChangePasswordEntity();

    private async Task Save()
    {
        try
        {
            if (string.IsNullOrEmpty(model.Password))
            {
                toast.Add("Enter Current Password", Severity.Error);
                return;
            }
            if (string.IsNullOrEmpty(model.NewPassword))
            {
                toast.Add("Enter New Password", Severity.Error);
                return;
            }
            var changed = await _userService.ChangeAdminPassword(_currentRequest.CurrentUserId, model);
            if (!changed)
            {
                toast.Add("Invalid Password", Severity.Error);
                return;
            }
            toast.Add("Password Changed Successfully", Severity.Success);
            navigation.NavigateTo($"{_currentRequest.BaseUrl}/Home");
        }
        catch (Exception ex)
        {
            toast.Add(ex.Message, Severity.Error);
        }
    }
}